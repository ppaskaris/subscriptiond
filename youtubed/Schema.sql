IF OBJECT_ID('Channel', 'U') IS NOT NULL
	DROP TABLE Channel;

CREATE TABLE Channel (
	Id NVARCHAR (50) NOT NULL,
	Url NVARCHAR (250) NULL,
	Title NVARCHAR (250) NOT NULL,
	Thumbnail NVARCHAR (2000) NOT NULL,
	StaleAfter DATETIMEOFFSET NOT NULL,
	VisibleAfter DATETIMEOFFSET NOT NULL,

	CONSTRAINT PK_Channel PRIMARY KEY (Id),
	CONSTRAINT UK_Channel_Url UNIQUE (Url)
);

﻿IF OBJECT_ID('List', 'U') IS NOT NULL
	DROP TABLE List;

CREATE TABLE List (
    Id UNIQUEIDENTIFIER NOT NULL,
    Token BINARY (40) NOT NULL,

	CONSTRAINT FK_List PRIMARY KEY (Id)
);

﻿IF OBJECT_ID('ChannelVideo', 'U') IS NOT NULL
	DROP TABLE ChannelVideo;

CREATE TABLE ChannelVideo (
	ChannelId NVARCHAR (50) NOT NULL,
	Id NVARCHAR (50) NOT NULL,
	Title NVARCHAR (100) NOT NULL,
	Duration BIGINT NOT NULL,
	PublishedAt DATETIMEOFFSET NOT NULL,
	Thumbnail NVARCHAR(2000) NULL,

	CONSTRAINT PK_ChannelVideo PRIMARY KEY (ChannelId, Id),
	CONSTRAINT FK_ChannelVideo_ChannelId FOREIGN KEY (ChannelId) REFERENCES Channel (Id)
);

﻿IF OBJECT_ID('ListChannel', 'U') IS NOT NULL
	DROP TABLE ListChannel;

CREATE TABLE ListChannel (
	ListId UNIQUEIDENTIFIER NOT NULL,
	ChannelId NVARCHAR (50) NOT NULL,

	CONSTRAINT PK_ListChannel PRIMARY KEY (ListId, ChannelId),
	CONSTRAINT FK_ListChannel_ChannelId FOREIGN KEY (ChannelId) REFERENCES Channel (Id)
);

﻿IF TYPE_ID('ChannelVideoType') IS NOT NULL
	DROP TYPE ChannelVideoType;

CREATE TYPE ChannelVideoType AS TABLE (
	ChannelId NVARCHAR (50) NOT NULL,
	Id NVARCHAR (50) NOT NULL,
	Title NVARCHAR (100) NOT NULL,
	Duration BIGINT NOT NULL,
	PublishedAt DATETIMEOFFSET NOT NULL,
	Thumbnail NVARCHAR(2000) NULL
);
