@using Humanizer

@model youtubed.Models.ListViewModel

@{
    ViewData["Title"] = "View List";
}

<h1>@ViewData["Title"]</h1>
<p>
    This is a <strong>secret list</strong> that is only visible to someone with
    a copy of <a asp-action="View" asp-route-Id="@Model.Id" asp-route-Token="@Model.Token">this link</a>.
    Consider bookmarking it as it cannot be recovered if you lose it.
</p>

<h2>Videos</h2>
@if (Model.Videos.Any())
{
    <ol class="video-list">
        @foreach (var video in Model.Videos)
        {
            <li class="video-item">
                <a href="@video.VideoUrl" rel="noopener noreferrer">
                    <div class="video-image">
                        <img src="@video.VideoThumbnail" alt="video thumbnail" referrerpolicy="no-referrer" width="210" height="118" />
                        <span class="video-duration">@video.VideoDuration.Humanize()</span>
                    </div>
                    <span class="video-title">@video.VideoTitle</span>
                    <span class="channel-title">@video.ChannelTitle</span>
                    <span class="video-published-at">@video.VideoPublishedAt.Humanize()</span>
                </a>
            </li>
        }
    </ol>
}
else
{
    <p>
        <em>There are no new videos in this list.</em>
    </p>
}

<div>
    <a asp-action="AddChannel" asp-route-Id="@Model.Id" asp-route-Token="@Model.Token">Add new channel</a>
</div>
